// Code generated by "stringer -type=Control -output=control_string.go"; DO NOT EDIT.

package constant

import "strconv"

const (
	_Control_name_0 = "BankSelectModulationBreathController"
	_Control_name_1 = "FootControllerPortamentoTimeDataEntryMainVolumeBalance"
	_Control_name_2 = "PanExpressionEffectControl1EffectControl2"
	_Control_name_3 = "GeneralPurposeController1GeneralPurposeController2GeneralPurposeController3GeneralPurposeController4"
	_Control_name_4 = "BankSelectLSBModulationLSBBreathControllerLSB"
	_Control_name_5 = "FootControllerLSBPortamentoTimeLSBDataEntryLSBMainVolumeLSBBalanceLSB"
	_Control_name_6 = "PanLSBExpressionLSBEffectControl1LSBEffectControl2LSB"
	_Control_name_7 = "GeneralPurposeController1LSBGeneralPurposeController2LSBGeneralPurposeController3LSBGeneralPurposeController4LSB"
	_Control_name_8 = "Hold1PortamentoOnOffSostenutoSoftPedalLegatoFootswitchHold2SoundVariationHarmonicIntensityReleaseTimeAttackTimeBrightnessDecayTimeVibratoRateVibratoDepthVibratoDelayUndefinedSoundControllerGeneralPurposeController5GeneralPurposeController6GeneralPurposeController7GeneralPurposeController8PortamentoControl"
	_Control_name_9 = "ReverbSendLevelTremoloDepthChorusSendLevelCelesteDepthPhaserDepthDataIncrementDataDecrementNonRegisteredParameterNumberLSBNonRegisteredParameterNumberMSBRegisteredParameterNumberLSBRegisteredParameterNumberMSB"
)

var (
	_Control_index_0 = [...]uint8{0, 10, 20, 36}
	_Control_index_1 = [...]uint8{0, 14, 28, 37, 47, 54}
	_Control_index_2 = [...]uint8{0, 3, 13, 27, 41}
	_Control_index_3 = [...]uint8{0, 25, 50, 75, 100}
	_Control_index_4 = [...]uint8{0, 13, 26, 45}
	_Control_index_5 = [...]uint8{0, 17, 34, 46, 59, 69}
	_Control_index_6 = [...]uint8{0, 6, 19, 36, 53}
	_Control_index_7 = [...]uint8{0, 28, 56, 84, 112}
	_Control_index_8 = [...]uint16{0, 5, 20, 29, 38, 54, 59, 73, 90, 101, 111, 121, 130, 141, 153, 165, 189, 214, 239, 264, 289, 306}
	_Control_index_9 = [...]uint8{0, 15, 27, 42, 54, 65, 78, 91, 122, 153, 181, 209}
)

func (i Control) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _Control_name_0[_Control_index_0[i]:_Control_index_0[i+1]]
	case 4 <= i && i <= 8:
		i -= 4
		return _Control_name_1[_Control_index_1[i]:_Control_index_1[i+1]]
	case 10 <= i && i <= 13:
		i -= 10
		return _Control_name_2[_Control_index_2[i]:_Control_index_2[i+1]]
	case 16 <= i && i <= 19:
		i -= 16
		return _Control_name_3[_Control_index_3[i]:_Control_index_3[i+1]]
	case 32 <= i && i <= 34:
		i -= 32
		return _Control_name_4[_Control_index_4[i]:_Control_index_4[i+1]]
	case 36 <= i && i <= 40:
		i -= 36
		return _Control_name_5[_Control_index_5[i]:_Control_index_5[i+1]]
	case 42 <= i && i <= 45:
		i -= 42
		return _Control_name_6[_Control_index_6[i]:_Control_index_6[i+1]]
	case 48 <= i && i <= 51:
		i -= 48
		return _Control_name_7[_Control_index_7[i]:_Control_index_7[i+1]]
	case 64 <= i && i <= 84:
		i -= 64
		return _Control_name_8[_Control_index_8[i]:_Control_index_8[i+1]]
	case 91 <= i && i <= 101:
		i -= 91
		return _Control_name_9[_Control_index_9[i]:_Control_index_9[i+1]]
	default:
		return "Control(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
